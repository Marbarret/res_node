swagger: '2.0'

schemes:
  - http
  - https

host: localhost:3000
basePath: /busease-api/v1

info:
  version: 1.0.0
  title: BusEase API
  description: API para gerenciamento de transporte escolar, permitindo registro de usuários, dependentes e autenticação.
  termsOfService: localhost:3000/busease-api/v1/termo-uso
  contact:
    name: Suporte BusEase
    url: localhost:3000/busease-api/v1/suporte
    email: suporte@email.com

securityDefinitions:
  BasicAuth:
    type: basic

security:
  - BasicAuth: []

consumes:
  - application/json
produces:
  - application/json

paths:
  /users:
    get:
      tags:
        - User
      summary: Lista todos os usuários cadastrados
      description: Retorna uma lista com todos os usuários registrados na base de dados.
      operationId: getUsers
      security:
        - BasicAuth: []
      responses:
        200:
          description: Sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Erro na requisição
        401:
          description: Acesso negado
        500:
          description: Erro interno

    post:
      tags:
        - User
      summary: Cadastra um novo usuário
      description: Registra um novo usuário na base de dados.
      operationId: createUser
      parameters:
        - in: body
          name: user
          description: Dados do usuário para registro
          schema:
            $ref: '#/definitions/CreateUser'
      responses:
        201:
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/User'
        400:
          description: O tipo de documento deve ser CPF ou CNPJ.
        401:
          description: Documento já cadastrado.
        500:
          description: Erro no servidor

  /users/{document}:
    get:
      tags:
        - User
      summary: Busca um usuário pelo CPF
      description: Retorna as informações de um usuário com base no CPF fornecido.
      operationId: getUserByDocument
      parameters:
        - in: path
          name: document
          type: string
          required: true
          description: CPF do usuário
      responses:
        200:
          description: Sucesso
          schema:
            $ref: '#/definitions/User'
        404:
          description: Usuário não encontrado
        500:
          description: Erro interno

    patch:
      tags:
        - User
      summary: Atualiza parcialmente um usuário
      description: Modifica campos específicos de um usuário identificado pelo CPF.
      operationId: patchUser
      parameters:
        - in: path
          name: document
          type: string
          required: true
          description: CPF do usuário
        - in: body
          name: updatedData
          description: Dados a serem atualizados
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: Usuário atualizado com sucesso
        404:
          description: Usuário não encontrado
        400:
          description: Dados inválidos
        500:
          description: Erro interno

    delete:
      tags:
        - User
      summary: Remove um usuário pelo CPF
      description: Exclui um usuário identificado pelo CPF fornecido.
      operationId: deleteUser
      parameters:
        - in: path
          name: document
          type: string
          required: true
          description: CPF do usuário
      responses:
        200:
          description: Usuário removido com sucesso
        404:
          description: Usuário não encontrado
        500:
          description: Erro interno

  /users/{document}/dependent:
    get:
      tags:
        - Dependents
      summary: Lista dependentes de um usuário
      description: Retorna a lista de dependentes associados a um CPF específico.
      operationId: getDependents
      parameters:
        - in: path
          name: document
          type: string
          required: true
          description: CPF do responsável
      responses:
        200:
          description: Sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/Dependents'
        404:
          description: Dependentes não encontrados
        500:
          description: Erro interno

    post:
      tags:
        - Dependents
      summary: Adiciona um dependente a um usuário
      description: Adiciona um dependente ao usuário identificado pelo CPF.
      operationId: addDependent
      parameters:
        - in: path
          name: document
          type: string
          required: true
          description: CPF do responsável
        - in: body
          name: dependent
          description: Dados do dependente
          schema:
            $ref: '#/definitions/Dependents'
      responses:
        201:
          description: Dependente adicionado com sucesso
        400:
          description: Dados inválidos fornecidos
        500:
          description: Erro interno

definitions:
  UserResult:
    type: object
    properties:
      fullName:
        type: string
      geneticName:
        type: string
      email:
        type: string
      contact:
        type: string
      document:
        $ref: '#/definitions/Document'
      address:
        $ref: '#/definitions/Address'
      photo: 
        type: string
      password:
        type: string
        format: password
      terms:
        type: boolean
      dependent:
        type: array
        items:
          $ref: '#/definitions/DependentGeral'

  DependentGeral:
    type: object
    properties:
      geral:
        $ref: '#/definitions/Padrao'
      relationship:
        type: string
        example: "Filha"
      school_name:
        type: string
      observation:
        type: string
      trans_plan:
        type: string

  CreateUser:
    type: object
    properties:
      role:
        type: string
        example: user or company
      responsible:
          $ref: '#/definitions/Padrao'
      password:
        type: string
        format: password
      terms:
        type: boolean

  Address:
    type: object
    properties:
      street: 
        type: string
      number:
        type: string
      zone:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string

  Document:
    type: object
    properties:
      document_type:
        type: string
      number:
        type: string

  Padrao:
    type: object
    properties:
      fullName:
        type: string
      geneticName:
        type: string
      email:
        type: string
      contact:
        type: string
      document:
        $ref: '#/definitions/Document'
      address:
        $ref: '#/definitions/Address'
      photo: 
        type: string
      terms:
        type: boolean


#         {
#     "role": "user",
#     "responsible": {
#         "fullName": "Marcylene Barreto",
#         "genericName": "Marcylene",
#         "email": "responsavel@email.com",
#         "contact": "11999999991",
#         "document": {
#             "document_type": "CPF",
#             "number": "12345678907"
#         },
#         "address": {
#             "street": "Rua Exemplo",
#             "number": "123",
#             "zone": "Bairro",
#             "city": "Cidade",
#             "state": "Estado",
#             "zip": "12345678"
#         },
#         "photo": "url_da_foto.jpg",
#         "terms": true
#     },
#     "verification": {
#         "method": "sms"
#     },
#     "password": "senha1234567",
#     "terms": true
# }